{"version":3,"sources":["components/ProductList.js","pages/Product.js","pages/Page2.js","pages/Page3.js","App.js","serviceWorker.js","index.js"],"names":["ProductList","this","props","products","map","product","Card","className","Body","name","toLowerCase","price","toString","replace","Component","Product","url_api","state","next_page_url","prev_page_url","first_page_url","last_page_url","categories","search","current_page","last_page","total","selectCategory","bind","searchProduct","changePage","event","setState","target","value","axios","get","then","response","data","id","e","url","onChange","placeholder","category","Badge","variant","onClick","Pagination","First","Prev","Item","active","Next","Last","Page2","Page3","App","Container","Row","Col","exact","path","component","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"+TAyBeA,E,iLApBX,OACE,6BACGC,KAAKC,MAAMC,SAASC,KAAI,SAAAC,GAAO,OAC9B,kBAACC,EAAA,EAAD,CAAMC,UAAU,gBACd,kBAACD,EAAA,EAAKE,KAAN,KACE,2BAAOD,UAAU,iBACdF,EAAQI,KAAKC,eAEhB,6BACA,2BAAOH,UAAU,iBAAjB,KACK,IACFF,EAAQM,MAAMC,WAAWC,QAAQ,wBAAyB,gB,GAbjDC,a,gBCiJXC,E,YA9Ib,WAAYb,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,QAAU,uBACf,EAAKC,MAAQ,CACXd,SAAU,GACVe,cAAe,GACfC,cAAe,GACfC,eAAgB,GAChBC,cAAe,GACfC,WAAY,GACZC,OAAQ,GACRC,aAAc,EACdC,UAAW,EACXC,MAAO,GAET,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAjBD,E,2EAmBLG,GAAQ,IAAD,OACnB9B,KAAK+B,SAAS,CAAET,OAAQQ,EAAME,OAAOC,QACrCC,IACGC,IAAInC,KAAKe,QAAU,uBAAyBf,KAAKgB,MAAMM,QACvDc,MAAK,SAAAC,GACJ,EAAKN,SAAS,CACZ7B,SAAUmC,EAASC,KAAKA,KACxBb,MAAOY,EAASC,KAAKb,MACrBF,aAAcc,EAASC,KAAKf,aAC5BC,UAAWa,EAASC,KAAKd,UACzBP,cAAeoB,EAASC,KAAKrB,cAC7BC,cAAemB,EAASC,KAAKpB,cAC7BC,eAAgBkB,EAASC,KAAKnB,eAC9BC,cAAeiB,EAASC,KAAKlB,qB,qCAItBmB,EAAIC,GAAI,IAAD,OACpBN,IAAMC,IAAInC,KAAKe,QAAU,yBAA2BwB,GAAIH,MAAK,SAAAC,GAC3D,EAAKN,SAAS,CACZ7B,SAAUmC,EAASC,KAAKA,KACxBb,MAAOY,EAASC,KAAKb,MACrBF,aAAcc,EAASC,KAAKf,aAC5BC,UAAWa,EAASC,KAAKd,UACzBP,cAAeoB,EAASC,KAAKrB,cAC7BC,cAAemB,EAASC,KAAKpB,cAC7BC,eAAgBkB,EAASC,KAAKnB,eAC9BC,cAAeiB,EAASC,KAAKlB,qB,iCAKxBqB,EAAKD,GAAI,IAAD,OACjBN,IAAMC,IAAIM,GAAKL,MAAK,SAAAC,GAClB,EAAKN,SAAS,CACZ7B,SAAUmC,EAASC,KAAKA,KACxBb,MAAOY,EAASC,KAAKb,MACrBF,aAAcc,EAASC,KAAKf,aAC5BC,UAAWa,EAASC,KAAKd,UACzBP,cAAeoB,EAASC,KAAKrB,cAC7BC,cAAemB,EAASC,KAAKpB,cAC7BC,eAAgBkB,EAASC,KAAKnB,eAC9BC,cAAeiB,EAASC,KAAKlB,qB,0CAId,IAAD,OAClBc,IAAMC,IAAInC,KAAKe,QAAU,gBAAgBqB,MAAK,SAAAC,GAC5C,EAAKN,SAAS,CACZ7B,SAAUmC,EAASC,KAAKA,KACxBb,MAAOY,EAASC,KAAKb,MACrBF,aAAcc,EAASC,KAAKf,aAC5BC,UAAWa,EAASC,KAAKd,UACzBP,cAAeoB,EAASC,KAAKrB,cAC7BC,cAAemB,EAASC,KAAKpB,cAC7BC,eAAgBkB,EAASC,KAAKnB,eAC9BC,cAAeiB,EAASC,KAAKlB,mBAIjCc,IAAMC,IAAInC,KAAKe,QAAU,iBAAiBqB,MAAK,SAAAC,GAC7C,EAAKN,SAAS,CACZV,WAAYgB,EAASC,Y,+BAKjB,IAAD,OACP,OACE,6BACE,yBAAKhC,UAAU,8BACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBACd,uBAAGA,UAAU,oBAGjB,2BACEA,UAAU,aACVoC,SAAU1C,KAAK4B,cACfK,MAAOjC,KAAKgB,MAAMM,OAClBqB,YAAY,sBAGhB,6BACA,yBAAKrC,UAAU,qBACZN,KAAKgB,MAAMK,WAAWlB,KAAI,SAAAyC,GAAQ,OACjC,kBAACC,EAAA,EAAD,CACEC,QAAQ,UACRxC,UAAU,mBACVyC,QAAS,SAAAP,GAAC,OAAI,EAAKd,eAAekB,EAASL,GAAIC,KAE9CI,EAASpC,SAEV,KAEN,6BACA,2BAAOF,UAAU,gBAAjB,SACS,IACNN,KAAKgB,MAAMS,MAAMd,WAAWC,QAAQ,wBAAyB,KAAM,IAFtE,mBAGmBZ,KAAKgB,MAAMO,aAH9B,SAGkDvB,KAAKgB,MAAMQ,WAE7D,kBAAC,EAAD,CAAatB,SAAUF,KAAKgB,MAAMd,WAAa,IAC/C,kBAAC8C,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,MAAZ,CACEF,QAAS,SAAAP,GAAC,OAAI,EAAKX,WAAW,EAAKb,MAAMG,eAAgBqB,MAE3D,kBAACQ,EAAA,EAAWE,KAAZ,CACEH,QAAS,SAAAP,GAAC,OAAI,EAAKX,WAAW,EAAKb,MAAME,cAAesB,MAG1D,kBAACQ,EAAA,EAAWG,KAAZ,CAAiBC,QAAM,GAAEpD,KAAKgB,MAAMO,cAEpC,kBAACyB,EAAA,EAAWK,KAAZ,CACEN,QAAS,SAAAP,GAAC,OAAI,EAAKX,WAAW,EAAKb,MAAMC,cAAeuB,MAE1D,kBAACQ,EAAA,EAAWM,KAAZ,CACEP,QAAS,SAAAP,GAAC,OAAI,EAAKX,WAAW,EAAKb,MAAMI,cAAeoB,Y,GAxI9C3B,aCMP0C,E,iLAPX,OACE,6BACE,6C,GAJY1C,aCSL2C,E,iLAPX,OACE,6BACE,6C,GAJY3C,a,gDC6CL4C,E,iLAnCX,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KAkBE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjC,kBAAC,IAAD,CAAOgD,KAAK,SAASC,UAAWR,IAChC,kBAAC,IAAD,CAAOO,KAAK,SAASC,UAAWP,a,GA3B9BQ,IAAMnD,WCEJoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxC,MAAK,SAAAyC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4fc513e4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nclass ProductList extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.products.map(product => (\n          <Card className=\"product-card\">\n            <Card.Body>\n              <small className=\"product-title\">\n                {product.name.toLowerCase()}\n              </small>\n              <br />\n              <small className=\"product-price\">\n                Rp{\" \"}\n                {product.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\n              </small>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n}\nexport default ProductList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ProductList from \"../components/ProductList\";\nimport { Badge, Pagination } from \"react-bootstrap\";\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.url_api = \"http://159.65.13.206\";\n    this.state = {\n      products: [],\n      next_page_url: \"\",\n      prev_page_url: \"\",\n      first_page_url: \"\",\n      last_page_url: \"\",\n      categories: [],\n      search: \"\",\n      current_page: 0,\n      last_page: 0,\n      total: 0\n    };\n    this.selectCategory = this.selectCategory.bind(this);\n    this.searchProduct = this.searchProduct.bind(this);\n    this.changePage = this.changePage.bind(this);\n  }\n  searchProduct(event) {\n    this.setState({ search: event.target.value });\n    axios\n      .get(this.url_api + \"/api/product/search/\" + this.state.search)\n      .then(response => {\n        this.setState({\n          products: response.data.data,\n          total: response.data.total,\n          current_page: response.data.current_page,\n          last_page: response.data.last_page,\n          next_page_url: response.data.next_page_url,\n          prev_page_url: response.data.prev_page_url,\n          first_page_url: response.data.first_page_url,\n          last_page_url: response.data.last_page_url\n        });\n      });\n  }\n  selectCategory(id, e) {\n    axios.get(this.url_api + \"/api/product/category/\" + id).then(response => {\n      this.setState({\n        products: response.data.data,\n        total: response.data.total,\n        current_page: response.data.current_page,\n        last_page: response.data.last_page,\n        next_page_url: response.data.next_page_url,\n        prev_page_url: response.data.prev_page_url,\n        first_page_url: response.data.first_page_url,\n        last_page_url: response.data.last_page_url\n      });\n    });\n  }\n\n  changePage(url, e) {\n    axios.get(url).then(response => {\n      this.setState({\n        products: response.data.data,\n        total: response.data.total,\n        current_page: response.data.current_page,\n        last_page: response.data.last_page,\n        next_page_url: response.data.next_page_url,\n        prev_page_url: response.data.prev_page_url,\n        first_page_url: response.data.first_page_url,\n        last_page_url: response.data.last_page_url\n      });\n    });\n  }\n  componentDidMount() {\n    axios.get(this.url_api + \"/api/product\").then(response => {\n      this.setState({\n        products: response.data.data,\n        total: response.data.total,\n        current_page: response.data.current_page,\n        last_page: response.data.last_page,\n        next_page_url: response.data.next_page_url,\n        prev_page_url: response.data.prev_page_url,\n        first_page_url: response.data.first_page_url,\n        last_page_url: response.data.last_page_url\n      });\n    });\n\n    axios.get(this.url_api + \"/api/category\").then(response => {\n      this.setState({\n        categories: response.data\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"input-group search-section\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">\n              <i className=\"fas fa-search\"></i>\n            </span>\n          </div>\n          <input\n            className=\"search-box\"\n            onChange={this.searchProduct}\n            value={this.state.search}\n            placeholder=\"Cari nama barang\"\n          />\n        </div>\n        <hr />\n        <div className=\"horizontal-scroll\">\n          {this.state.categories.map(category => (\n            <Badge\n              variant=\"warning\"\n              className=\"horizontal-menu \"\n              onClick={e => this.selectCategory(category.id, e)}\n            >\n              {category.name}\n            </Badge>\n          ))}{\" \"}\n        </div>\n        <hr />\n        <small className=\"small-header\">\n          total:{\" \"}\n          {this.state.total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}{\" \"}\n          produk, halaman {this.state.current_page} dari {this.state.last_page}\n        </small>\n        <ProductList products={this.state.products} />{\" \"}\n        <Pagination>\n          <Pagination.First\n            onClick={e => this.changePage(this.state.first_page_url, e)}\n          />\n          <Pagination.Prev\n            onClick={e => this.changePage(this.state.prev_page_url, e)}\n          />\n\n          <Pagination.Item active>{this.state.current_page}</Pagination.Item>\n\n          <Pagination.Next\n            onClick={e => this.changePage(this.state.next_page_url, e)}\n          />\n          <Pagination.Last\n            onClick={e => this.changePage(this.state.last_page_url, e)}\n          />\n        </Pagination>\n      </div>\n    );\n  }\n}\nexport default Product;\n","import React, { Component } from \"react\";\n\nclass Page2 extends Component {\n  render() {\n    return (\n      <div>\n        <h3> Page 2 </h3>\n      </div>\n    );\n  }\n}\nexport default Page2;\n","import React, { Component } from \"react\";\n\nclass Page3 extends Component {\n  render() {\n    return (\n      <div>\n        <h3> Page 3 </h3>\n      </div>\n    );\n  }\n}\nexport default Page3;\n","import React from \"react\";\nimport \"./App.css\";\nimport Product from \"./pages/Product\";\nimport Page2 from \"./pages/Page2\";\nimport Page3 from \"./pages/Page3\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Badge, Nav } from \"react-bootstrap\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <BrowserRouter>\n              {/* <Nav\n                activeKey=\"/home\"\n                onSelect={selectedKey => alert(`selected ${selectedKey}`)}\n              >\n                <Nav.Item>\n                  <Nav.Link>\n                    <Link to=\"/product\">Product</Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"link-1\">Pemesanan</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"link-2\">Tentang</Nav.Link>\n                </Nav.Item>\n              </Nav> */}\n\n              <Switch>\n                <Route exact path=\"/\" component={Product} />\n                <Route path=\"/page2\" component={Page2} />\n                <Route path=\"/page3\" component={Page3} />\n              </Switch>\n            </BrowserRouter>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}